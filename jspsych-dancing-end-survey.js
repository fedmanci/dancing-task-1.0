/**
 * jspsych-dancing-end-survey
 * a jspsych plugin for free html forms, adapted*.
 *
 * Jan Simson
 *
 * documentation: docs.jspsych.org
 *
 */

jsPsych.plugins['dancing-end-survey'] = (function() {

  var plugin = {};

  plugin.info = {
    name: 'dancing-end-survey',
    description: '',
    parameters: {
      html: {
        type: jsPsych.plugins.parameterType.HTML_STRING,
        pretty_name: 'HTML',
        default: null,
        description: 'HTML formatted string containing all the input elements to display. Every element has to have its own distinctive name attribute. The <form> tag must not be included and is generated by the plugin.'
      },
      preamble: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Preamble',
        default: null,
        description: 'HTML formatted string to display at the top of the page above all the questions.'
      },
      button_label: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Button label',
        default:  'Continue',
        description: 'The text that appears on the button to finish the trial.'
      },
      dataAsArray: {
        type: jsPsych.plugins.parameterType.BOOLEAN,
        pretty_name: 'Data As Array',
        default:  false,
        description: 'Retrieve the data as an array e.g. [{name: "INPUT_NAME", value: "INPUT_VALUE"}, ...] instead of an object e.g. {INPUT_NAME: INPUT_VALUE, ...}.'
      }
    }
  }

  plugin.trial = function(display_element, trial) {

trial.html =     "<fieldset>";
trial.html +=    "<legend class='big'> Dancer 1 </legend>";
trial.html +=    "<p>How much did you like this dancer?";
trial.html +=    "<input type='range' id='d11' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you trust this dancer?";
trial.html +=    "<input type='range' id='d12' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer happy?";
trial.html +=    "<input type='range' id='d13' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer sad?";
trial.html +=    "<input type='range' id='d14' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you get irritated or annoyed with this dancer?";
trial.html +=    "<input type='range' id='d15' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much effort did you invest in understanding which distance this dancer liked?";
trial.html +=    "<input type='range' id='d16' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How unpredictable was their dance?";
trial.html +=    "<input type='range' id='d17' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel that their mood was unstable?";
trial.html +=    "<input type='range' id='d18' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel this dancer’s mood depended on what you were doing?";
trial.html +=    "<input type='range' id='d19' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<legend class='big'> Dancer 2 </legend>";
trial.html +=    "<p>How much did you like this dancer?";
trial.html +=    "<input type='range' id='d21' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you trust this dancer?";
trial.html +=    "<input type='range' id='d22' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer happy?";
trial.html +=    "<input type='range' id='d23' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer sad?";
trial.html +=    "<input type='range' id='d24' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you get irritated or annoyed with this dancer?";
trial.html +=    "<input type='range' id='d25' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much effort did you invest in understanding which distance this dancer liked?";
trial.html +=    "<input type='range' id='d26' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How unpredictable was their dance?";
trial.html +=    "<input type='range' id='d27' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel that their mood was unstable?";
trial.html +=    "<input type='range' id='d28' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel this dancer’s mood depended on what you were doing?";
trial.html +=    "<input type='range' id='d29' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<legend class='big'> Dancer 3 </legend>";
trial.html +=    "<p>How much did you like this dancer?";
trial.html +=    "<input type='range' id='d31' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you trust this dancer?";
trial.html +=    "<input type='range' id='d32' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer happy?";
trial.html +=    "<input type='range' id='d33' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer sad?";
trial.html +=    "<input type='range' id='d34' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you get irritated or annoyed with this dancer?";
trial.html +=    "<input type='range' id='d35' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much effort did you invest in understanding which distance this dancer liked?";
trial.html +=    "<input type='range' id='d36' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How unpredictable was their dance?";
trial.html +=    "<input type='range' id='d37' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel that their mood was unstable?";
trial.html +=    "<input type='range' id='d38' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel this dancer’s mood depended on what you were doing?";
trial.html +=    "<input type='range' id='d39' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<legend class='big'> Dancer 4 </legend>";
trial.html +=    "<p>How much did you like this dancer?";
trial.html +=    "<input type='range' id='d41' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you trust this dancer?";
trial.html +=    "<input type='range' id='d42' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer happy?";
trial.html +=    "<input type='range' id='d43' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Do you think you made this dancer sad?";
trial.html +=    "<input type='range' id='d44' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much did you get irritated or annoyed with this dancer?";
trial.html +=    "<input type='range' id='d45' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How much effort did you invest in understanding which distance this dancer liked?";
trial.html +=    "<input type='range' id='d46' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>How unpredictable was their dance?";
trial.html +=    "<input type='range' id='d47' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel that their mood was unstable?";
trial.html +=    "<input type='range' id='d48' min='0' max='10' value= 2>";
trial.html +=    "</p>";
trial.html +=    "<p>Did you feel this dancer’s mood depended on what you were doing?";
trial.html +=    "<input type='range' id='d49' min='0' max='10' value= 2>";
trial.html +=    "</p>";



    var html_node = document.createElement("div");
    html_node.style.width = (0.58*window.innerWidth).toString()+"px";
    html_node.style.height = (0.58*window.innerHeight).toString()+"px";
    html_node.style.float = "left";
    html_node.style.overflow = "scroll";
    html_node.style.marginTop = (0.1*window.innerHeight).toString()+"px";
    html_node.style.margin = "auto";
    display_element.appendChild(html_node);

    //Create a canvas element and append it to the DOM
    var canvas = document.createElement("canvas");

    //canvas.style.marginLeft = (0.6*window.innerWidth).toString()+"px";
    canvas.style.float = "left";
    canvas.style.width = (0.35*window.innerWidth).toString()+"px";
    canvas.style.height = (0.35*window.innerHeight).toString()+"px";
    canvas.style.marginTop = (0.1*window.innerHeight).toString()+"px";
    display_element.appendChild(canvas);

    dpr = window.devicePixelRatio;
    var canvas_width = canvas.width = dpr*0.4*window.innerWidth;
    var canvas_height = canvas.height = dpr*0.4*window.innerHeight;

    //Get the context of the canvas so that it can be painted on.
    var ctx = canvas.getContext("2d");

    // aesthetics
    var agent_size = 32 * dpr;
    var agent_colors = new Array("rgb(0,255,128)","rgb(102,178,255)","rgb(255,255,51)","rgb(255,178,102)");

    // Position dancers on the right side
    xa = [180,180,180,180];
    ya = [1*canvas_height/8, 3*canvas_height/8, 5*canvas_height/8, 7*canvas_height/8];

    function drawAgents() {

      for (a = 0; a < 4; a++){

        ctx.beginPath();
        ctx.arc(xa[a], ya[a], agent_size + 2 * Math.cos(performance.now()/500), 0,
        Math.PI * 2);
        ctx.strokeStyle = "rgb(255,255,255)";
        ctx.lineWidth = 1;
        ctx.stroke();
        ctx.fillStyle = agent_colors[a];
        ctx.fill(); // color fill
        ctx.closePath();

        // agent number drawing
          ctx.font = "42px Consolas"; ctx.fillStyle = "black";
          ctx.fillText(a+1,xa[a]+16,ya[a]-16);
      }
    }
    setInterval(drawAgents, 10);

    var html = '';
    // show preamble text
    if(trial.preamble !== null){
      html += '<div id="jspsych-dancing-end-survey-preamble" class="jspsych-dancing-end-survey-preamble">'+trial.preamble+'</div>';
    }
    // start form
    html += '<form id="jspsych-dancing-end-survey">'

    // add form HTML / input elements
    html += trial.html;

    // add submit button
    html += '<input type="submit" id="jspsych-dancing-end-survey-next" class="jspsych-btn jspsych-dancing-end-survey" value="'+trial.button_label+'"></input>';

    html += '</form>'
    html_node.innerHTML = html;

    html_node.querySelector('#jspsych-dancing-end-survey').addEventListener('submit', function(event) {
      // don't submit form
      event.preventDefault();

      // measure response time
      var endTime = performance.now();
      var response_time = endTime - startTime;

      var question_data = serializeArray(this);

      if (!trial.dataAsArray) {
        question_data = objectifyForm(question_data);
      }

      // save data
      var trialdata = {
        "rt": response_time,
        "responses": JSON.stringify(question_data)
      };

      html_node.innerHTML = '';

      // next trial
      jsPsych.finishTrial(trialdata);
    });

    var startTime = performance.now();
  };

  /*!
   * Serialize all form data into an array
   * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com
   * @param  {Node}   form The form to serialize
   * @return {String}      The serialized form data
   */
  var serializeArray = function (form) {
    // Setup our serialized data
    var serialized = [];

    // Loop through each field in the form
    for (var i = 0; i < form.elements.length; i++) {
      var field = form.elements[i];

      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields
      if (!field.name || field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') continue;

      // If a multi-select, get all selections
      if (field.type === 'select-multiple') {
        for (var n = 0; n < field.options.length; n++) {
          if (!field.options[n].selected) continue;
          serialized.push({
            name: field.name,
            value: field.options[n].value
          });
        }
      }

      // Convert field data to a query string
      else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {
        serialized.push({
          name: field.name,
          value: field.value
        });
      }
    }

    return serialized;
  };

  // from https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery
  function objectifyForm(formArray) {//serialize data function
    var returnArray = {};
    for (var i = 0; i < formArray.length; i++){
      returnArray[formArray[i]['name']] = formArray[i]['value'];
    }
    return returnArray;
  }

  return plugin;
})();
